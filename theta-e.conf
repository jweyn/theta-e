# THETA-E CONFIGURATION FILE
# 
# Copyright (c) 2017 Jonathan Weyn <jweyn@uw.edu>
# See the file LICENSE for your rights.

################################################################################

# General configuration

# Current station ID
current_stid = KSEA

# Root directory of the file hierarchy
THETAE_ROOT = /Users/Jojo/Documents/theta-e

# Debugging level 0-100
debug = 100

# DO NOT MODIFY
version = 0.0.1

################################################################################

# In this section, place information about the stations.

[Stations]

    [[KSEA]]
        stid = KSEA
        UTC_offset = 8
        latitude = 47.44472
        longitude = -122.31361
        wfo_id = SEW
        wfo_sitename = "SEATTLE-KING WA"
        actual_name = "Seattle, Washington"
        start_date = 20170801
            
    [[KUIL]]
        stid = KUIL
        UTC_offset = 8
        latitude = 47.935897
        longitude = -118.4085
        wfo_id = SEW
        wfo_sitename = "QUILLAYUTE AIRPORT-CLALLAM WA"
        actual_name = "Quillayute, Washington"
        start_date = 20170801
        
################################################################################

# This section manages the models used for forecasting. Any extra parameters 
# needed for specific model sources go here. Each source should have a
# parameter 'historical' which determines whether it is possible to retrieve
# historical forecasts from the source (default False).

[Models]

    [[GFS MOS]]
        driver = thetae.data_parsers.gfsmos
        historical = True
        
#    [[USL22Z]]
#        driver = thetae.data_parsers.usl
#        historical = False
#        run_time = 22Z
        
#    [[NCAR]]
#        driver = thetae.data_parsers.ncar
#        historical = True
#        # NCAR requires site-specific codes. These are written in this file.
#        codes_file = %(THETAE_ROOT)s/codes/ncar.codes
        
################################################################################

# This section determines the modules used for verification retrieval.

[Verify]

    # The daily verification values
    [[Verification]]
        driver = verify.verification

    # Time series of hourly observations
    [[Obs]]
        driver = verify.obs

    # Climatology
    [[Climo]]
        driver = verify.climo
    
################################################################################

# This section is for the main theta-e engine. It defines the services that 
# fetch the data, write the data, 

[Engine]

    [[Services]]
        # Grouped by types of services. The order is the order in which they 
        # will run. This leaves the option of other services in the 
        # "user" folder to be easily added
        retrieve_services = thetae.getForecasts, thetae.getVerification
        calc_services = thetae.calcVerification
        output_services = thetae.output.plot, thetae.output.web
        
################################################################################

# This section does the database binding. The main database is 'forecast', and
# the parameters govern how the database is connected to an actual SQL file.

[DataBinding]

    # This is the main theta-e forecast database configuration.
    [[forecast]]
        # The database must match one of the sections in [Databases].
        database = fcst_archive
        # The schema defines the structure of the timeseries and daily tables.
        schema = thetae.schemas.default

################################################################################

# This section defines the databases. Secondary databases may be used in the 
# future for novel purposes.

[Databases]
    
    # A SQLite database for general forecast archiving
    [[fcst_archive]]
        # Only SQLite is available for now
        database_type = SQLite
        database_name = theta-e.sdb

################################################################################

# THETA-E CONFIGURATION FILE
# 
# Copyright (c) 2017 Jonathan Weyn <jweyn@uw.edu>
#
# See the file LICENSE for your rights.

################################################################################

# General configuration

# Current station ID
current_stid = KSEA

# Root directory of the file hierarchy
THETAE_ROOT =

# Debugging level 0-100
debug = 1

# Tell theta-e to crash with a traceback if an error occurs while processing
# forecast, observation, climo, or verification data.
traceback = 0

# DO NOT MODIFY
version = 0.0.1

################################################################################

# In this section, place information about the stations.

[Stations]

    [[KSEA]]
        timezone = America/Los_Angeles
        latitude = 47.44472
        longitude = -122.31361
        long_name = "Seattle, Washington"
        start_date = 20180201

    [[KUIL]]
        timezone = America/Los_Angeles
        latitude = 47.935897
        longitude = -118.4085
        long_name = "Quillayute, Washington"
        start_date = 20180201

################################################################################

# This section manages the models used for forecasting. Any extra parameters 
# needed for specific model sources go here. Each source should have a
# parameter 'historical' which determines whether it is possible to retrieve
# historical forecasts from the source (default False). If a driver needs to
# know which specific model it is using, then construct a parameter that tells
# this to the driver and is specified under the header for each model here that
# uses the driver. For example, both USL12Z and USL22Z will use the same usl
# driver, but should have a parameter 'run_time' that is read by the driver.
# Note that this does not necessarily correspond to the name of the model; that
# name is the subsection header under Models in this conf file.

[Models]

    [[GFS MOS]]
        driver = thetae.data_parsers.mos
        historical = True
        mos_model = GFS

    [[NAM MOS]]
        driver = thetae.data_parsers.mos
        historical = True
        mos_model = NAM

    [[GEFS MOS]]
        driver = thetae.data_parsers.gefs_mos
        historical = False
        ensemble_file = gefs_mos.csv

    [[NWS]]
        driver = thetae.data_parsers.nws
        historical = False

    [[UKMET]]
        driver = thetae.data_parsers.ukmet
        historical = False
        # UKMET requires site-specific codes. These are written in this file.
        codes_file = ukmet.codes

    [[DARKSKY]]
        driver = thetae.data_parsers.darksky
        historical = False
        api_key =

################################################################################

# This section determines the modules used for verification retrieval. This
# should probably not be changed unless new modules are used in the future for
# better retrieval and/or processing of verification data.

[Verify]

    # The API key for MesoWest
    api_key =

    # The daily verification
    [[Verification]]
        driver = thetae.verify.verification

    # The hourly observations
    [[Obs]]
        driver = thetae.verify.obs

    # Climatology
    [[Climo]]
        driver = thetae.verify.climo

################################################################################

# This section is for the main theta-e engine. It defines the services that 
# fetch the data, output plots and web data, and so on.

[Engine]

    [[Services]]
        # Grouped by types of services. The order is the order in which they 
        # will run. This leaves the option of other services in the 
        # "user" folder to be easily added
        retrieve_services = thetae.getForecasts, thetae.getVerification,
        calc_services = thetae.calcVerification,
        output_services = thetae.plot.all, thetae.web.all,

################################################################################

# This section does the database binding. The main database is 'forecast', and
# the parameters govern how the database is connected to an actual SQL file.

[DataBinding]

    # This is the main theta-e forecast database configuration. It should
    # probably not be changed.
    [[forecast]]
        # The database must match one of the sections in [Databases].
        database = fcst_archive
        # The schema defines the structure of the timeseries and daily tables.
        schema = thetae.schemas.default

################################################################################

# This section defines the databases. Secondary databases may be used in the 
# future for novel purposes.

[Databases]

    # A SQLite database for general forecast archiving
    [[fcst_archive]]
        # Only SQLite is available for now
        database_type = SQLite
        database_name = theta-e.sdb

################################################################################

# This section provides options for the plot module.

[Plot]

    # List here all plots to be executed by thetae.plot.all. Each should be an
    # individual attribute of the thetae.plot module.
    plots = timeseries,

    # Any additional configuration options read by any of the plot functions
    # should go here.
    [[Options]]
        plot_all_stations = False
        variables = temperature, dewPoint, windSpeed, rain,
        bufr_models = GFS, NAM, NAMNEST,

################################################################################

# This section provides options for the web module.

[Web]

    # List here all plots to be executed by thetae.plot.all. Each should be an
    # individual attribute of the thetae.plot module.
    outputs = json,

    # Any additional configuration options read by any of the web functions
    # should go here.
    [[Options]]
        output_all_stations = False

################################################################################
